#!/bin/zsh
# This script defines a function for generating a prompt
# of the format nvm(version) that can be included in a custom prompt

if [[ -z "$nvm_prompt_file_sourced" ]]; then
    # You can access the prompt generated by this script with the NVM_PROMPT env variable
    nvm_prompt() {
        # Current nvm version
        local ref="$(nvm version)"
        if [[ -n "$ref" ]]; then
            NVM_PROMPT='nvm(%F{cyan}'${ref}'%f)'
        else
            NVM_PROMPT=''
        fi
    }

    function nvm_prompt_set_newline() {
        nvm_prompt_newlines_before=$1
        nvm_prompt_newlines_after=$2
    }

    nvm_prompt_newline() {
        nvm_prompt

        local countBefore=$nvm_prompt_newlines_before
        local countAfter=$nvm_prompt_newlines_after
        newLinesBefore=''
        newLinesAfter=''
        
        if [[ "$OSTYPE" == "darwin"* ]]; then
            if (($countBefore > 0)); then
                for i in $(seq 1 $countBefore); do
                    newLinesBefore=$newLinesBefore$'%{\n%}'
                done           
            fi        
            if (($countAfter > 0)); then
                for j in $(seq 1 $countAfter); do
                    newLinesAfter=$newLinesAfter$'%{\n%}'
                done
            fi
        else
            for i in $(seq 1 $countBefore); do
                newLinesBefore=$newLinesBefore$'%{\n\r%}'
            done
            for j in $(seq 1 $countAfter); do
                newLinesAfter=$newLinesAfter$'%{\n\r%}'
            done
        fi


        if [ -n "$NVM_PROMPT" ]; then
            NVM_PROMPT=$newLinesBefore$NVM_PROMPT$newLinesAfter
        fi
    }
fi

nvm_prompt_file_sourced=true